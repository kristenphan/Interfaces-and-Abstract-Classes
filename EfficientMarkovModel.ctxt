#BlueJ class context
comment0.target=EfficientMarkovModel
comment0.text=\r\n\ Implement\ MarkovModel\ to\ generate\ random\ text\ \r\n\ consisting\ of\ letters\ chosen\ randomly\ from\ the\ training\ text\r\n
comment1.params=
comment1.target=EfficientMarkovModel()
comment2.params=s
comment2.target=void\ setTraining(java.lang.String)
comment3.params=
comment3.target=void\ buildMap()
comment3.text=\ \r\n\ Map\ all\ possible\ substrings\ of\ the\ training\ text\ (key)\ to\ their\ subsequent\ characters\ (values)\r\n\ The\ length\ of\ the\ substrings\ depends\ on\ the\ order\ of\ the\ Markov\ object\r\n\ This\ HashMap\ will\ then\ be\ used\ to\ look\ up\ characters\ following\ a\ specific\ substring\ when\ needed\r\n\ A\ new\ map\ should\ be\ built\ for\ each\ new\ training\ text\r\n
comment4.params=
comment4.target=void\ printHashMapInfo()
comment5.params=key
comment5.target=java.util.ArrayList\ getFollows(java.lang.String)
comment6.params=numChars
comment6.target=java.lang.String\ getRandomText(int)
comment6.text=\r\n\ Generate\ and\ reuturn\ random\ text\ that\ is\ @param\ numChars\ long\r\n\ with\ each\ character\ (i.e.\ letter)\ is\ chosen\ randomly\ from\ the\ training\ text\ in\ accordance\ with\ the\ Markov\ order\r\n
comment7.params=
comment7.target=java.lang.String\ toString()
numComments=8
